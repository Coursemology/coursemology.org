<%= simple_form_for [@course, @assessment, @question],
                    html: { class: 'form-horizontal'}  do |f| %>

    <%= f.input :title %>
    <%= f.association :language, label_method: :title, value_method: :id, include_blank: false %>
    <%= f.input :max_grade, as: :integer, input_html: {class: "number_field input-mini"}, min: 0  %>
    <%= f.association :dependent_on,
                      collection: @assessment.questions.coding.before(@question.question, @assessment.questions.count),
                      label_method: :title, value_method: :id,
                      include_blank: true, hint: "Include student solution from this question" %>

    <%= f.input :description, as: :text, input_html:{class: "span7 text-area html-editor", rows:10}  %>
    <%= f.input :auto_graded, as: :boolean, inline_label: "Check to enable auto-grading",
                wrapper_html: {class: "#{'hidden' unless @assessment.is_mission?}"},
                input_html: {"data-toggle" => "collapse", "data-target" => "#auto-grading-setting"}  %>

    <%= f.input :staff_comments, as: :text, input_html:{class: "span7 text-area", rows:5}  %>

    <div class="cos_code path-code">
      <%= f.input :template, as: :text, input_html: { class: "span7",
                                                      rows: "4",
                                                      render: 'code',
                                                      language: @question.language.codemirror_mode,
                                                      version: @question.language.version} %>
    </div>
    <div id="auto-grading-setting" class="collapse <%= @question.auto_graded? ? "in" : "out" %>">
      <h3>Options</h3>

      <%= f.input :memory_limit,label: "Memory Limit (MB)", as: :integer, input_html: {class: "number_field input-mini"}  %>
      <%= f.input :time_limit,label: "Time Limit (secs)", as: :integer, input_html: {class: "number_field input-mini"}  %>

      <% if @assessment.is_mission? %>
          <%= f.input :attempt_limit, label: "Test Limit (times)", as: :integer, input_html: {class: "number_field input-mini"}  %>
      <% end %>


      <div id="pathstep_content">
        <div class="cos_code path-code" id="path_dooptions">
          <div>Pre-include (optional, hidden, inserted before student's code): </div>
          <%= f.input_field :pre_include, as: :text, rows: "4",
                            render: 'code',
                            language: @question.language.codemirror_mode,
                            version: @question.language.version %>
          <div>Appended code (optional, hidden, appened after student's code):</div>
          <%= f.input_field :append_code, as: :text, rows: "4",
                            render: 'code',
                            language: @question.language.codemirror_mode,
                            version: @question.language.version %>
          <br />
        </div>

        <div id="path_testcases">
          <input type="hidden" id="tc-type-data" value='<%= @test_types.to_json %>'>
          <h3>Test Cases</h3>
          <p><strong>NOTE:</strong> The expression in the <strong>'CODE TO RUN'</strong> column will be compared with the expression in the <strong>'EXPECTED OUTOUT'</strong> column using the equality operator. The return value of <code>print()</code> is <code>None</code> and the printed output should not be confused with the return value. </p>
        </div>
      </div>
    </div>
    <%= f.hidden_field :tests, id: "coding_question_data" %>
    <%= f.button :form_submit, id:"saveCQ", cancel: :back %>
    <%= render :partial => "layouts/html_editor" %>
<% end %>

