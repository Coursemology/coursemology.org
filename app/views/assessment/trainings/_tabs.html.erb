<% if can? :manage, Tab %>
    <span class="btn" style="float: right" data-toggle="modal" data-target="#add_tab">
      <i class="icon-cogs icon-white"></i>
      <span>Manage Tabs</span>
    </span>

    <div class="modal hide fade" id="add_tab">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick="location.reload();">&times;</button>
        <h3>Manage Tabs</h3>
      </div>
      <div class="modal-body form-horizontal">
        <div ng-view></div>
      </div>
      <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true" onclick="location.reload();">Close</button>
      </div>
    </div>
<% end %>
<ul class="nav nav-tabs">
  <% if @tabs.length == 0 %>
      <li class="<%= "active" if @tab_id == 'Trainings' %>">
        <a href="<%=  course_assessment_trainings_path(@course) %>?_tab=Trainings"><h4><%= @course.customized_title_by_model(Assessment::Training).pluralize %></h4></a>
      </li>
  <% else %>
      <% @tabs.each do |tab| %>
          <li class="<%= "active" if @tab_id == tab.id.to_s %>">
            <a href="<%=  course_assessment_trainings_path(@course) %>?_tab=<%= tab.id %>"><h4><%= tab.title %></h4></a>
          </li>
      <% end %>
  <% end %>
  <% if can? :bulk_update, Assessment %>
      <li class="<%= "active" if current_page? :overview_course_assessment_trainings %>">
        <a href="<%= overview_course_assessment_trainings_path %>" ><h4>Overview</h4></a>
      </li>
  <% end %>
</ul>

<script>
    var tab_count = 0;

    function get_course_id(url) {
        var parts = url.split('/');
        var index = parts.indexOf('courses');
        return parts[index + 1];
    }

    angular.module('coursemologyApp')
            .factory('Tabs', function($resource) {
                var Tabs;
                return Tabs = (function() {
                    function Tabs(course_id) {
                        this.course_id = course_id;
                        this.service = $resource('/courses/:course_id/tabs/:tab_id.json', {
                            course_id: '@course_id',
                            tab_id: '@id'
                        }, {
                            'save': { method: 'POST'},
                            'update': {method: 'PUT'}
                        });
                    }

                    Tabs.prototype.index = function() {
                        return  this.service.query({course_id: this.course_id});
                    };

                    Tabs.prototype.find = function(tab_id) {
                        return this.service.get({course_id: this.course_id, tab_id: tab_id});
                    };

                    Tabs.prototype.create = function(attrs, errorHandler) {
                        new this.service({course_id: this.course_id, tab: attrs}).$save({course_id: this.course_id, tab: attrs}, function(tab){
                            return attrs.id = tab.id;
                        }, errorHandler);

                        return attrs;
                    };

                    Tabs.prototype.delete = function(tab_id) {
//                        this.service.

                    };

                    return Tabs
                })();
            })
            .config(function($routeProvider) {
                $routeProvider
                        .when('/', {
                            controller:'ListCtrl',
                            templateUrl:'list.html'
                        })
                        .when('/edit/:tab_id', {
                            controller:'EditCtrl',
                            templateUrl:'detail.html'
                        })
                        .when('/new', {
                            controller:'CreateCtrl',
                            templateUrl:'detail.html'
                        })
                        .otherwise({
                            redirectTo: '/'
                        });
            })
            .controller('ListCtrl', function($scope, $routeParams, $location, Tabs) {
                var tabs = new Tabs(get_course_id($location.absUrl()));
                var holder = tabs.index();
                $scope.tabs = holder;
                var tab_count = holder.length;
                console.log(tab_count);
                console.log($scope.tabs);


                $scope.sortableOptions = {
                    update: function(e, ui) {
                        console.log($scope.tabs);
//                        var logEntry = tmpList.map(function(i){
//                            return i.value;
//                        }).join(', ');
//                        $scope.sortingLog.push('Update: ' + logEntry);
                    },
                    stop: function(e, ui) {
                        console.log($scope.tabs);
                        // this callback has the changed model
//                        var logEntry = tmpList.map(function(i){
//                            return i.value;
//                        }).join(', ');
//                        $scope.sortingLog.push('Stop: ' + logEntry);
                    }
                };
            })

            .controller('CreateCtrl', function($scope, $location, $routeParams, $timeout, Tabs) {
                var tabs = new Tabs(get_course_id($location.absUrl()));

                $scope.message = "*Note: All your current trainings will be grouped into your first tab";

                $scope.save = function() {
                    var attrs = $scope.tab;
                    console.log(attrs);
                    attrs.owner_type = 'Assessment::Training';
                    tabs.create(attrs, function() {
                        $timeout(function() { $location.path('/'); });
                    });
                    $location.path('/');
                };
            })

            .controller('EditCtrl',
            function($scope, $location, $routeParams, Tabs) {
                var tabs = new Tabs(get_course_id($location.absUrl()));

                $scope.tab = tabs.find($routeParams.tab_id);
                $scope.message = "*Note: trainings under deleted tab will be moved to the first tab.";


                $scope.destroy = function() {
                    var deleteTab = confirm('Are you absolutely sure you want to delete tab \'' + $scope.tab.title + "\' ?" );
                    if (deleteTab) {
                        $scope.tab.$remove();
                        $location.path('/');
                    }
                };

                $scope.save = function() {
                    $scope.tab.$update();
                    $location.path('/');
                };
            });

    $(document).ready(function() {
        $('.ui-sortable').sortable({
            update: function(e, ui) {
                updated_order = [];

                $('tr.tab.ng-scope').each(function (i) {
                    updated_order.push({id: $(this).data("id"), position: i + 1});
                });

                course_id = get_course_id(window.location.href);

                $.ajax({
                    type: 'PUT',
                    url: '/courses/' + course_id + '/tabs/sort',
                    data: { order: updated_order }
                });
            }
        });
    });
</script>

<script type="text/ng-template" id="list.html">
  <table class="table table-spacing sort" ng-model="tabs" ui-sortable="sortableOptions">
    <thead>
    <tr>
      <th>Order</th>
      <th>Project</th>
      <th style="text-align:center">Description</th>
      <th><a href="#/new"><i class="icon-plus-sign"></i></a></th>
    </tr>
    </thead>
    <tbody id="dump" class="tabs" >
    <tr ng-repeat="tab in tabs" class="tab" data-id="{{tab.id}}">
      <td>{{$index + 1}}</td>
      <td>{{tab.title}}</td>
      <td>{{tab.description}}</td>
      <td>
        <a href="#/edit/{{tab.id}}"><i class="icon-pencil"></i></a>
      </td>
    </tr>
    </tbody>
  </table>

</script>

<script type="text/ng-template" id="detail.html">
  <form name="myForm" class="form-horizontal">
    <p style="margin-left: 20px">{{message}}</p>

    <div class="control-group" ng-class="{error: myForm.name.$invalid}">
      <label class="control-label">Title</label>
      <div class="controls">
          <input type="text" name="name" ng-model="tab.title" required>
            <span ng-show="myForm.name.$error.required" class="help-inline">
                Required</span>
      </div>
    </div>

    <div class="control-group">
        <label class="control-label">Description</label>
      <div class="controls">
        <textarea name="description" ng-model="tab.description"></textarea>
      </div>
    </div>

    <br>
    <div style="text-align:center">
        <a href="#/" class="btn">Cancel</a>
        <button ng-click="save()" ng-disabled="myForm.$invalid"
                class="btn btn-primary">Save</button>
        <button ng-click="destroy()"
                ng-show="tab.$remove" class="btn btn-danger">Delete</button>
    </div>
  </form>
</script>

<style>
    .tabs {
        list-style: none outside none;
        margin: 10px 0 30px;
    }

    .tab {
        /*width: 200px;*/
        /*padding: 5px 10px;*/
        /*margin: 5px 0;*/
        /*border: 2px solid #444;*/
        /*border-radius: 5px;*/
        background-color: #f9f9f9;

        /*font-size: 1.1em;*/
        /*font-weight: bold;*/
        /*text-align: center;*/
        cursor: move;
    }

    /*.table-spacing {*/
        /*border-collapse: separate;*/
        /*border-spacing: 0 1em;*/
    /*}*/
</style>
