<div class="materials-folder-controls">
  <span>
    <% if (can? :upload, @folder) %>
      <% if @folder.is_virtual? %>
        <span class="materials-disabled-controls" title="This folder is reserved for Mission/Training files.">
          <a class='btn disabled' title="Upload Files">
            Upload
          </a>
          <a class="btn disabled" title="Create Folder">
            <h4 class="icon-folder-close"></h4>
          </a>
        </span>
      <% else %>
      <% if (can? :upload, @folder) %>
        <a href="<%= upload_course_material_folder_path(@course, @folder) %>" class='btn'
           title="Upload Files" rel="tooltip">
          Upload
        </a>
      <% end %>
      <% if (can? :manage, @folder) %>
        <a href="#create-subfolder-modal" data-toggle="modal" class="btn" title="Create Folder" rel="tooltip">
          <h4 class="icon-folder-close"></h4>
        </a>
      <% end %>
      <% end %>
    <% end %>
    &nbsp;
  </span>
  
  <span class="pull-right btn-group">
    <% if (can? :manage, @folder) %>
      <% if @folder.is_virtual? %>
      <a class="btn disabled" title="This folder can't be edited." rel="tooltip">Edit</a>
      <% else %>
      <%= link_to "Edit", "#edit-subfolder-modal", "data-toggle" => "modal", :class => 'btn' %>
      <% end %>
    <% end %>
    <%= link_to "Download .zip", (@folder.is_virtual? ?
        course_material_virtual_folder_path(@course, @folder, :format => 'zip') :
        course_material_folder_path(@course, @folder, :format => 'zip')),
        :class => 'btn', :id => 'materials-download-zip-button' %>
    
    <% if not(@folder.is_virtual?) %>
    <%# For non-root folders, allow marking all materials read recursively. %>
    <% if @folder.parent_folder %>
    <%= link_to "Mark as Seen", course_material_folder_mark_read_path(@course, @folder), :class => 'btn' %>
      <button class="btn dropdown-toggle" data-toggle="dropdown">
        <span class="caret"></span>
      </button>
      <ul class="dropdown-menu">
        <li><%= link_to "Mark entire #{get_materials_display_name} as seen", course_material_folder_mark_read_path(@course, @course.root_folder) %></li>
      </ul>
    <% else %>
    <%# Otherwise we are at root, then marking the root folder read is as
        good as marking all materials recursively read. %>
        <%= link_to "Mark entire #{get_materials_display_name} as Seen", course_material_folder_mark_read_path(@course, @folder), :class => 'btn' %>
    <% end %>
    <% end %>
  </span>
</div>

<% if (can? :manage, @folder) && not(@folder.is_virtual?) %>
<div id="create-subfolder-modal" class="modal hide fade">
  <div class="modal-header">
    <h3>Create Subfolder</h3>
  </div>
  <%= render partial: "subfolder_form", locals: { modal: true, folder_to_change: MaterialFolder.new, subfolder_method: :post, parent: @folder } %>
</div>

<div id="edit-subfolder-modal" class="modal hide fade">
  <div class="modal-header">
    <h3>Edit Folder</h3>
  </div>
  <%= render partial: "subfolder_form", locals: { modal: true, folder_to_change: @folder, subfolder_method: :put, parent: nil } %>
</div>
<% end %>
